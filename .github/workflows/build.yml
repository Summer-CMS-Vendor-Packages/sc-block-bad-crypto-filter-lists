name: "PHP Build"

on:
  push:
#    paths:
#      - '**.php' # Only run workflow when php file is changed
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

permissions:
  actions: read
  checks: read
  contents: read # To fetch code (actions/checkout)
  deployments: none
  id-token: none
  issues: none
  discussions: none
  packages: none
  pages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  tests:
    name: "Summer CMS Build"
    
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      matrix:
        include:
          - php-version: "8.0"
            job-description: "with Symfony ^6"
            execute-flex-with-symfony-version: "^6" # Explicit check for Symfony 6.x compatibility
            experimental: false

          - php-version: "8.1"
            job-description: "with calculating code coverage"
            calculate-code-coverage: "yes"
            phpunit-flags: "--testsuite coverage --exclude-group covers-nothing --coverage-clover build/logs/clover.xml"
            migration-rules: "yes" # Should be checked on the highest supported PHP version
            experimental: false

          - php-version: "8.2"
            PHP_CS_FIXER_IGNORE_ENV: 1 # Added as outside the supported php range
            composer-flags: "--ignore-platform-req=PHP"
            experimental: false
      fail-fast: false

    steps:
      - name: "Cancel Previous Runs"
        uses: "styfle/cancel-workflow-action@0.11.0"
        with:
          access_token: "${{ github.token }}"

      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 0

      - name: "Get code coverage driver"
        uses: "actions/github-script@v6"
        id: "code-coverage-driver"
        with:
          script: "return \"${{ matrix.calculate-code-coverage }}\" == \"yes\" ? \"pcov\" : \"none\""
          result-encoding: "string"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo"
          ini-values: "memory_limit=2048M"
          coverage: "${{ steps.code-coverage-driver.outputs.result }}"
          tools: "composer:v2, cs2pr, flex, php-cs-fixer, phpunit"
        env:
          fail-fast: "false" # Disabled as old PHP version cannot run flex
          update: "${{ matrix.php-version == '8.0' }}" # Force update to 8.0.1+, ref https://github.com/shivammathur/setup-php/issues/394#issuecomment-760461251
    
      - name: "Get Composer Cache Directory"
        id: "composer-cache"
        run: "echo \"dir=$(composer config cache-files-dir)\" >> $GITHUB_OUTPUT"
        
      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-"

      - name: "Configure Symfony Flex"
        if: "matrix.execute-flex-with-symfony-version"
        run: "composer config extra.symfony.require ${{ matrix.execute-flex-with-symfony-version }}"

      - name: "Setup Problem Matchers"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/phpunit.json\""

      - name: "Install dependencies"
        uses: "nick-invision/retry@v2"
        with:
          timeout_minutes: 5
          max_attempts: 5
          retry_wait_seconds: 30
          command: "composer update --prefer-dist --no-interaction --ansi --optimize-autoloader --no-interaction --no-progress ${{ matrix.composer-flags }}"

      - name: "Run PHPStan"
        run: "vendor/bin/phpstan analyse -l 9 --configuration=phpstan/config.neon src tests --error-format=checkstyle | cs2pr"

      # Execute migration rules before running tests and self-fixing,
      # so that we know that our codebase is future-ready
      - name: "Run PHP CS Fixer with migration rules"
        if: "matrix.migration-rules == 'yes'"
        run: "vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php -q"

      - name: "Disable time limit for tests when collecting coverage"
        if: "matrix.calculate-code-coverage == 'yes'"
        run: "sed 's/enforceTimeLimit=\"true\"/enforceTimeLimit=\"false\"/g' phpunit.xml.dist > phpunit.xml"

      - name: "Run tests"
        env:
          PHP_CS_FIXER_IGNORE_ENV: "${{ matrix.PHP_CS_FIXER_IGNORE_ENV }}"
        run: "vendor/bin/phpunit ${{ matrix.phpunit-flags }}"

      - name: "Upload coverage results to Coveralls"
        if: "matrix.calculate-code-coverage == 'yes'"
        env:
          COVERALLS_REPO_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: "php vendor/bin/php-coveralls --verbose --coverage_clover=build/logs/clover.xml -v"

      - name: "Run PHP CS Fixer"
        env:
          PHP_CS_FIXER_IGNORE_ENV: "${{ matrix.PHP_CS_FIXER_IGNORE_ENV }}"
          PHP_CS_FIXER_FUTURE_MODE: 1
        run: "vendor/bin/php-cs-fixer fix --diff --dry-run -v --format=checkstyle | cs2pr"
